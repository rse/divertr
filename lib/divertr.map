{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/divertr.js"],"names":["_tokenizr","require","divertr","input","options","Object","assign","syntax","debug","std","regexDump","regexEnter","regexLeave","alt","xml","mustache","rpm","wml-macro","wml-diversion","undefined","Error","_typeof","RegExp","state","location","stack","buffer","null","main","overwrite","lexer","_tokenizr2","default","rule","ctx","match","accept","name","rewindNow","rewindNext","plaintext","before","ignore","finish","tokens","forEach","token","isA","value","push","length","pop","n","indexOf","splice","console","log","JSON","stringify","expandDiversion","seen","keys","output","el","module","exports"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/*\n**  Divertr -- Text Diversion Filter\n**  Copyright (c) 1997-2018 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport Tokenizr from \"tokenizr\"\n\n/*  the API method  */\nconst divertr = (input, options) => {\n    /*  configuration options  */\n    options = Object.assign({}, {\n        syntax: \"std\",\n        debug:  false\n    }, options)\n\n    /*  pre-defined syntax variants  */\n    let syntax = {\n        \"std\": {\n            regexDump:  /-\\{([a-zA-Z][a-zA-Z0-9_]*)\\}-/,              /* -{foo}-  */\n            regexEnter: /-\\{(\\!?)([a-zA-Z][a-zA-Z0-9_]*)(\\!?):/,      /* -{foo:   */\n            regexLeave: /:((?:[a-zA-Z][a-zA-Z0-9_]*)?)\\}-/            /* :foo}-   */\n        },\n        \"alt\": {\n            regexDump:  /-\\{([a-zA-Z][a-zA-Z0-9_]*)\\}-/,              /* -{foo}-  */\n            regexEnter: /-(\\!?)([a-zA-Z][a-zA-Z0-9_]*)(\\!?)->/,       /* -foo->   */\n            regexLeave: /<-((?:[a-zA-Z][a-zA-Z0-9_]*)?)-/             /* <-foo-   */\n        },\n        \"xml\": {\n            regexDump:  /<([a-zA-Z][a-zA-Z0-9_]*)\\/>/,                /* <foo/>   */\n            regexEnter: /<(\\!?)([a-zA-Z][a-zA-Z0-9_]*)(\\!?)>/,        /* <foo>    */\n            regexLeave: /<\\/((?:[a-zA-Z][a-zA-Z0-9_]*)?)>/            /* </foo>   */\n        },\n        \"mustache\": {\n            regexDump:  /\\{\\{([a-zA-Z][a-zA-Z0-9_]*)\\}\\}/,            /* {{foo}}  */\n            regexEnter: /\\{\\{#(\\!?)([a-zA-Z][a-zA-Z0-9_]*)(\\!?)\\}\\}/, /* {{#foo}} */\n            regexLeave: /\\{\\{\\/((?:[a-zA-Z][a-zA-Z0-9_]*)?)\\}\\}/      /* {{/foo}} */\n        },\n        \"rpm\": {\n            regexDump:  /%\\{([a-zA-Z][a-zA-Z0-9_]*)\\}/,               /* %{foo}   */\n            regexEnter: /%\\{(\\!?)([a-zA-Z][a-zA-Z0-9_]*)(\\!?):/,      /* %{foo:   */\n            regexLeave: /:((?:[a-zA-Z][a-zA-Z0-9_]*)?)\\}/             /* :foo}    */\n        },\n        \"wml-macro\": {\n            regexDump:  /\\{#([a-zA-Z][a-zA-Z0-9_]*)#\\}/,              /* {#foo#}  */\n            regexEnter: /\\{#(\\!?)([a-zA-Z][a-zA-Z0-9_]*)(\\!?)#:/,     /* {#foo#:  */\n            regexLeave: /:#((?:[a-zA-Z][a-zA-Z0-9_]*)?)#\\}/           /* :#foo#}  */\n        },\n        \"wml-diversion\": {\n            regexDump:  /<<([a-zA-Z][a-zA-Z0-9_]*)>>/,                /* <<foo>>  */\n            regexEnter: /\\.\\.(\\!?)([a-zA-Z][a-zA-Z0-9_]*)(\\!?)>>/,    /* ..foo>>  */\n            regexLeave: /<<((?:[a-zA-Z][a-zA-Z0-9_]*)?)\\.\\./          /* <<foo..  */\n        }\n    }\n\n    /*  fetch the right syntax  */\n    if (typeof options.syntax === \"string\") {\n        if (syntax[options.syntax] === undefined)\n            throw new Error(\"unknown pre-defined syntax\")\n        options.syntax = syntax[options.syntax]\n    }\n\n    /*  sanity check options  */\n    if (typeof options.syntax !== \"object\")\n        throw new Error(\"invalid syntax option\")\n    if (typeof options.syntax.regexDump === \"string\")\n        options.syntax.regexDump = new RegExp(options.syntax.regexDump)\n    if (!(typeof options.syntax.regexDump === \"object\" && options.syntax.regexDump instanceof RegExp))\n        throw new Error(\"invalid syntax.regexDump option (RegExp or String expected)\")\n    if (typeof options.syntax.regexEnter === \"string\")\n        options.syntax.regexEnter = new RegExp(options.syntax.regexEnter)\n    if (!(typeof options.syntax.regexEnter === \"object\" && options.syntax.regexEnter instanceof RegExp))\n        throw new Error(\"invalid syntax.regexEnter option (RegExp or String expected)\")\n    if (typeof options.syntax.regexLeave === \"string\")\n        options.syntax.regexLeave = new RegExp(options.syntax.regexLeave)\n    if (!(typeof options.syntax.regexLeave === \"object\" && options.syntax.regexLeave instanceof RegExp))\n        throw new Error(\"invalid syntax.regexLeave option (RegExp or String expected)\")\n\n    /*  internal processing state   */\n    let state = {\n        location:  \"main\",                                      /* currently active location */\n        stack:     [ \"null\" ],                                  /* stack of remembered locations */\n        buffer:    { \"null\": [], \"main\": [] },                  /* the location buffers */\n        overwrite: {}                                           /* the overwrite flags */\n    }\n\n    /*\n    **   PASS 1: Parse the input data into disjunct location buffers\n    **           Each location buffer contains plain text blocks and\n    **           location pointers.\n    */\n\n    /*  establish the lexical parser  */\n    let lexer = new Tokenizr()\n    lexer.rule(options.syntax.regexDump, (ctx, match) => {\n        ctx.accept(\"DUMP\", { name: match[1] })\n    })\n    lexer.rule(options.syntax.regexEnter, (ctx, match) => {\n        ctx.accept(\"ENTER\", { name: match[2], rewindNow: match[1] !== \"\", rewindNext: match[3] !== \"\" })\n    })\n    lexer.rule(options.syntax.regexLeave, (ctx, match) => {\n        ctx.accept(\"LEAVE\", { name: match[1] })\n    })\n    let plaintext = \"\"\n    lexer.before((ctx, match, rule) => {\n        if (rule.name !== \"plaintext\" && plaintext !== \"\") {\n            ctx.accept(\"PLAINTEXT\", plaintext)\n            plaintext = \"\"\n        }\n    })\n    lexer.rule(/(?:.|\\r?\\n)/, (ctx, match) => {\n        plaintext += match[0]\n        ctx.ignore()\n    }, \"plaintext\")\n    lexer.finish((ctx) => {\n        if (plaintext !== \"\")\n            ctx.accept(\"PLAINTEXT\", plaintext)\n    })\n\n    /*  parse the input into tokens  */\n    lexer.input(input)\n    lexer.debug(options.debug)\n    lexer.tokens().forEach((token) => {\n        if (token.isA(\"DUMP\")) {\n            /*  on-the-fly initialize location buffer  */\n            let location = token.value.name\n            if (state.buffer[location] === undefined)\n                state.buffer[location] = []\n\n            /*  sanity check location  */\n            if (state.buffer[state.location] === state.buffer[location])\n                throw new Error(`self-reference of location \"${state.location}\"`)\n\n            /*  insert location pointer into current location  */\n            state.buffer[state.location].push(state.buffer[location])\n        }\n        else if (token.isA(\"ENTER\")) {\n            /*  remember old location on stack  */\n            state.stack.push(state.location)\n\n            /*  determine location and optional qualifies, then enter this location  */\n            state.location = token.value.name\n            let rewindNow  = token.value.rewindNow\n            let rewindNext = token.value.rewindNext\n\n            /*  on-the-fly initialize location buffer  */\n            if (state.buffer[state.location] === undefined)\n                state.buffer[state.location] = []\n\n            /*  is a \"rewind now\" forced by a \"rewind next\" from last time?  */\n            if (state.overwrite[state.location]) {\n                rewindNow = true\n                state.overwrite[state.location] = false\n            }\n\n            /*  remember a \"rewind next\" for next time  */\n            if (rewindNext)\n                state.overwrite[state.location] = true\n\n            /*  execute a \"rewind now\" by clearing the location buffer  */\n            if (rewindNow)\n                while (state.buffer[state.location].length > 0)\n                    state.buffer[state.location].pop()\n        }\n        else if (token.isA(\"LEAVE\")) {\n            /*  sanity check situation  */\n            if (state.stack.length === 0)\n                throw new Error(`cannot leave \"null\" location (already in \"null\" location)`)\n            let location = token.value.name\n            if (location === \"null\")\n                throw new Error(`cannot leave \"null\" location (not allowed at all)`)\n            if (location !== \"\" && location !== state.location) {\n                /*  leave the named location and all locations on the stack above it  */\n                let n = state.stack.indexOf(location)\n                if (n === -1)\n                    throw new Error(`no such entered location \"${location}\"`);\n                state.stack.splice(n)\n                state.location = state.stack.pop()\n            }\n            else\n                /*  leave just the current location  */\n                state.location = state.stack.pop()\n        }\n        else if (token.isA(\"PLAINTEXT\")) {\n            /*  insert plaintext into current location  */\n            state.buffer[state.location].push(token.value)\n        }\n    })\n\n    /*  optionally show internal state  */\n    if (options.debug)\n        console.log(\"INTERNAL STATE AFTER PASS 1:\\n\" + JSON.stringify(state, null, \"    \"))\n\n    /*\n    **   PASS 2: Recursively expand the location structure\n    **           by starting from the main location buffer\n    */\n\n    /*  expand a particular diversion  */\n    const expandDiversion = (buffer) => {\n        /*  check for recursion by making sure\n            the current location has not already been seen.  */\n        state.stack.forEach((seen) => {\n            if (seen === buffer) {\n                /*  find name of location via location pointer\n                    for human readable warning message  */\n                let name = \"unknown\"\n                Object.keys(state.buffer).forEach((n) => {\n                    if (state.buffer[n] === buffer)\n                        name = n\n                })\n                throw new Error(`recursion through location \"${name}\"`)\n            }\n        })\n\n        /*  ok, location still not seen,\n            but remember it for recursive calls.  */\n        state.stack.push(buffer)\n\n        /*  recursively expand the location\n            by stepping through its list elements  */\n        let output = \"\"\n        buffer.forEach((el) => {\n            if (typeof el === \"object\")\n                /*  element is a location pointer, so\n                    recurse into the expansion of it  */\n                output += expandDiversion(el)  /*  RECURSION  */\n            else\n                /*  element is just a plain text block  */\n                output += el\n        })\n\n        /*  we can remove the location from\n            the stack because we are back from recursive calls.  */\n        state.stack.pop()\n\n        /*  return expanded buffer output  */\n        return output\n    }\n\n    /*  recursively expand the diversions in the main buffer  */\n    state.stack = []\n    let output = expandDiversion(state.buffer.main)\n    return output\n}\n\n/*  export API method  */\nmodule.exports = divertr\n\n"]}